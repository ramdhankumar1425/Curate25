{
  "type": "directory",
  "name": "root",
  "children": [
    {
      "type": "directory",
      "name": "src",
      "children": [
        {
          "type": "file",
          "name": "index.css",
          "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;"
        },
        {
          "type": "file",
          "name": "main.jsx",
          "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);"
        },
        {
          "type": "file",
          "name": "App.jsx",
          "content": "import React from 'react';\nimport ChatInterface from './components/ChatInterface';\n\nconst App = () => {\n    return (\n        <div className=\"min-h-screen bg-gray-100 p-4\">\n            <ChatInterface />\n        </div>\n    );\n};\n\nexport default App;"
        },
        {
          "type": "directory",
          "name": "components",
          "children": [
            {
              "type": "file",
              "name": "ChatInterface.jsx",
              "content": "import React, { useState } from 'react';\nimport MessageInput from './MessageInput';\nimport MessageList from './MessageList';\n\nconst ChatInterface = () => {\n    const [messages, setMessages] = useState([]);\n\n    const handleSendMessage = (text) => {\n        if (text.trim()) {\n            setMessages([...messages, { text, isUser: true }]);\n            simulateResponse();\n        }\n    };\n\n    const simulateResponse = () => {\n        setTimeout(() => {\n            setMessages(prev => [...prev, {\n                text: \"Thanks for your message!\",\n                isUser: false\n            }]);\n        }, 1000);\n    };\n\n    return (\n        <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n            <div className=\"p-4 bg-blue-600\">\n                <h1 className=\"text-white text-xl font-bold\">Chat Interface</h1>\n            </div>\n            <MessageList messages={messages} />\n            <MessageInput onSendMessage={handleSendMessage} />\n        </div>\n    );\n};\n\nexport default ChatInterface;"
            },
            {
              "type": "file",
              "name": "MessageInput.jsx",
              "content": "import React, { useState } from 'react';\n\nconst MessageInput = ({ onSendMessage }) => {\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSendMessage(message);\n        setMessage('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"p-4 border-t\">\n            <div className=\"flex gap-2\">\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:border-blue-500\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                    Send\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default MessageInput;"
            },
            {
              "type": "file",
              "name": "MessageList.jsx",
              "content": "import React from 'react';\n\nconst MessageList = ({ messages }) => {\n    return (\n        <div className=\"h-[400px] overflow-y-auto p-4 space-y-4\">\n            {messages.map((message, index) => (\n                <div\n                    key={index}\n                    className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}\n                >\n                    <div\n                        className={`max-w-[70%] p-3 rounded-lg ${\n                            message.isUser\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-gray-200 text-gray-800'\n                        }`}\n                    >\n                        {message.text}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default MessageList;"
            }
          ]
        }
      ]
    },
    {
      "type": "file",
      "name": "index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Simple Chat Interface</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.jsx\"></script>\n</body>\n</html>"
    }
  ]
}