{
  "type": "directory",
  "name": "root",
  "children": [
    {
      "type": "directory",
      "name": "src",
      "children": [
        {
          "type": "file",
          "name": "index.css",
          "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;"
        },
        {
          "type": "file",
          "name": "main.jsx",
          "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);"
        },
        {
          "type": "file",
          "name": "App.jsx",
          "content": "import React from 'react';\nimport ChatInterface from './components/ChatInterface';\n\nconst App = () => {\n    return (\n        <div className=\"min-h-screen bg-gray-100\">\n            <ChatInterface />\n        </div>\n    );\n};\n\nexport default App;"
        },
        {
          "type": "directory",
          "name": "components",
          "children": [
            {
              "type": "file",
              "name": "ChatInterface.jsx",
              "content": "import React, { useState, useRef, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\n\nconst ChatInterface = () => {\n    const [messages, setMessages] = useState([]);\n    const [userId] = useState(Math.random().toString(36).substring(7));\n    const ws = useRef(null);\n\n    useEffect(() => {\n        ws.current = new WebSocket('wss://echo.websocket.org');\n        \n        ws.current.onmessage = (event) => {\n            const message = JSON.parse(event.data);\n            setMessages(prev => [...prev, message]);\n        };\n\n        return () => {\n            if (ws.current) ws.current.close();\n        };\n    }, []);\n\n    const sendMessage = (text) => {\n        if (!text.trim()) return;\n        \n        const message = {\n            id: Date.now(),\n            text,\n            userId,\n            timestamp: new Date().toISOString()\n        };\n\n        if (ws.current) {\n            ws.current.send(JSON.stringify(message));\n        }\n\n        setMessages(prev => [...prev, message]);\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-8 max-w-2xl\">\n            <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n                <div className=\"p-4 bg-blue-600\">\n                    <h1 className=\"text-white text-xl font-bold\">Real-Time Chat</h1>\n                </div>\n                <MessageList messages={messages} currentUserId={userId} />\n                <MessageInput onSendMessage={sendMessage} />\n            </div>\n        </div>\n    );\n};\n\nexport default ChatInterface;"
            },
            {
              "type": "file",
              "name": "MessageList.jsx",
              "content": "import React, { useRef, useEffect } from 'react';\nimport Message from './Message';\n\nconst MessageList = ({ messages, currentUserId }) => {\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    return (\n        <div className=\"h-[400px] overflow-y-auto p-4 space-y-4\">\n            {messages.map((message) => (\n                <Message\n                    key={message.id}\n                    message={message}\n                    isOwnMessage={message.userId === currentUserId}\n                />\n            ))}\n            <div ref={messagesEndRef} />\n        </div>\n    );\n};\n\nexport default MessageList;"
            },
            {
              "type": "file",
              "name": "Message.jsx",
              "content": "import React from 'react';\n\nconst Message = ({ message, isOwnMessage }) => {\n    return (\n        <div className={`flex ${isOwnMessage ? 'justify-end' : 'justify-start'}`}>\n            <div className={`max-w-[70%] rounded-lg px-4 py-2 ${\n                isOwnMessage ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-800'\n            }`}>\n                <p className=\"break-words\">{message.text}</p>\n                <span className={`text-xs ${isOwnMessage ? 'text-blue-100' : 'text-gray-500'}`}>\n                    {new Date(message.timestamp).toLocaleTimeString()}\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Message;"
            },
            {
              "type": "file",
              "name": "MessageInput.jsx",
              "content": "import React, { useState } from 'react';\n\nconst MessageInput = ({ onSendMessage }) => {\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (message.trim()) {\n            onSendMessage(message);\n            setMessage('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"p-4 border-t\">\n            <div className=\"flex space-x-2\">\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Type a message...\"\n                    className=\"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:border-blue-500\"\n                />\n                <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                    Send\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default MessageInput;"
            }
          ]
        }
      ]
    },
    {
      "type": "file",
      "name": "index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Real-Time Chat Interface</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.jsx\"></script>\n</body>\n</html>"
    }
  ]
}