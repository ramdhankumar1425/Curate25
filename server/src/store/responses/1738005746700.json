{
  "type": "directory",
  "name": "root",
  "children": [
    {
      "type": "directory",
      "name": "src",
      "children": [
        {
          "type": "file",
          "name": "index.css",
          "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;"
        },
        {
          "type": "file",
          "name": "main.jsx",
          "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)"
        },
        {
          "type": "file",
          "name": "App.jsx",
          "content": "import React from 'react'\nimport ProductList from './components/ProductList'\nimport Cart from './components/Cart'\nimport { CartProvider } from './context/CartContext'\nimport Navbar from './components/Navbar'\n\nconst App = () => {\n  return (\n    <CartProvider>\n      <div className=\"min-h-screen bg-gray-100\">\n        <Navbar />\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2\">\n              <ProductList />\n            </div>\n            <div>\n              <Cart />\n            </div>\n          </div>\n        </div>\n      </div>\n    </CartProvider>\n  )\n}\n\nexport default App"
        },
        {
          "type": "directory",
          "name": "components",
          "children": [
            {
              "type": "file",
              "name": "ProductList.jsx",
              "content": "import React from 'react'\nimport ProductCard from './ProductCard'\nimport { products } from '../data/products'\n\nconst ProductList = () => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {products.map(product => (\n        <ProductCard key={product.id} product={product} />\n      ))}\n    </div>\n  )\n}\n\nexport default ProductList"
            },
            {
              "type": "file",
              "name": "ProductCard.jsx",
              "content": "import React from 'react'\nimport { useCart } from '../context/CartContext'\n\nconst ProductCard = ({ product }) => {\n  const { addToCart } = useCart()\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n      <img src={product.image} alt={product.name} className=\"w-full h-48 object-cover\" />\n      <div className=\"p-4\">\n        <h3 className=\"text-lg font-semibold\">{product.name}</h3>\n        <p className=\"text-gray-600\">${product.price.toFixed(2)}</p>\n        <button\n          onClick={() => addToCart(product)}\n          className=\"mt-4 w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors\"\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductCard"
            },
            {
              "type": "file",
              "name": "Cart.jsx",
              "content": "import React from 'react'\nimport { useCart } from '../context/CartContext'\n\nconst Cart = () => {\n  const { cart, removeFromCart, total } = useCart()\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Shopping Cart</h2>\n      {cart.length === 0 ? (\n        <p>Your cart is empty</p>\n      ) : (\n        <>\n          {cart.map(item => (\n            <div key={item.id} className=\"flex justify-between items-center mb-4\">\n              <div>\n                <h3 className=\"font-medium\">{item.name}</h3>\n                <p className=\"text-gray-600\">${item.price.toFixed(2)} x {item.quantity}</p>\n              </div>\n              <button\n                onClick={() => removeFromCart(item.id)}\n                className=\"text-red-600 hover:text-red-800\"\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n          <div className=\"mt-6 pt-4 border-t\">\n            <div className=\"flex justify-between font-semibold\">\n              <span>Total:</span>\n              <span>${total.toFixed(2)}</span>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Cart"
            },
            {
              "type": "file",
              "name": "Navbar.jsx",
              "content": "import React from 'react'\nimport { useCart } from '../context/CartContext'\n\nconst Navbar = () => {\n  const { cart } = useCart()\n\n  return (\n    <nav className=\"bg-white shadow-md\">\n      <div className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-xl font-bold\">Fresh Market</h1>\n          <div className=\"flex items-center\">\n            <span className=\"bg-blue-600 text-white px-3 py-1 rounded-full\">\n              {cart.reduce((acc, item) => acc + item.quantity, 0)}\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar"
            }
          ]
        },
        {
          "type": "directory",
          "name": "context",
          "children": [
            {
              "type": "file",
              "name": "CartContext.jsx",
              "content": "import React, { createContext, useContext, useState } from 'react'\n\nconst CartContext = createContext()\n\nexport const useCart = () => useContext(CartContext)\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([])\n\n  const addToCart = (product) => {\n    setCart(currentCart => {\n      const existingItem = currentCart.find(item => item.id === product.id)\n      if (existingItem) {\n        return currentCart.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        )\n      }\n      return [...currentCart, { ...product, quantity: 1 }]\n    })\n  }\n\n  const removeFromCart = (productId) => {\n    setCart(currentCart => currentCart.filter(item => item.id !== productId))\n  }\n\n  const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0)\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, total }}>\n      {children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartContext"
            }
          ]
        },
        {
          "type": "directory",
          "name": "data",
          "children": [
            {
              "type": "file",
              "name": "products.js",
              "content": "export const products = [\n  {\n    id: 1,\n    name: 'Fresh Apples',\n    price: 2.99,\n    image: 'https://images.pexels.com/photos/1510392/pexels-photo-1510392.jpeg'\n  },\n  {\n    id: 2,\n    name: 'Bananas',\n    price: 1.99,\n    image: 'https://images.pexels.com/photos/1093038/pexels-photo-1093038.jpeg'\n  },\n  {\n    id: 3,\n    name: 'Carrots',\n    price: 1.49,\n    image: 'https://images.pexels.com/photos/143133/pexels-photo-143133.jpeg'\n  },\n  {\n    id: 4,\n    name: 'Tomatoes',\n    price: 2.49,\n    image: 'https://images.pexels.com/photos/1327838/pexels-photo-1327838.jpeg'\n  }\n]"
            }
          ]
        }
      ]
    }
  ]
}